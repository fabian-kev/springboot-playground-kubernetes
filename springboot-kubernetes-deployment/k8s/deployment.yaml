apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-spring-boot
  labels:
    app: spring-boot
spec:
  replicas: 2
  selector:
    matchLabels:
      app: spring-boot
  template:
    metadata:
      labels:
        app: spring-boot
    spec:
      containers:
        - name: spring-boot
          image: fbiankevin/springboot-kubernetes-deployment:0.0.2  # Replace with your image
          imagePullPolicy: IfNotPresent  # Use local image if available, else pull
          ports:
            - containerPort: 8080
              name: http
          resources:
            requests:
              memory: "256Mi"
              cpu: "200m"  # 0.2 CPU cores
            limits:
              memory: "512Mi"
              cpu: "500m"  # 0.5 CPU cores
          readinessProbe:
            httpGet:
              path: /actuator/health  # Spring Boot Actuator health endpoint
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
          env:
            - name: SPRING_CONFIG_LOCATION
              value: "file:/app/config/"  # Tell Spring Boot to look here
            - name: SPRING_DATASOURCE_PASSWORD  # Environment variable name for your app
              valueFrom:
                secretKeyRef:
                  name: app-spring-boot-secret  # Name of the Secret
                  key: SPRING_DATASOURCE_PASSWORD       # Key from the Secret
          volumeMounts:
            - name: config-volume
              mountPath: "/app/config"
              readOnly: true
      volumes:
        - name: config-volume
          configMap:
            name: app-spring-boot-config
            items:
              - key: application.properties
                path: application.properties
